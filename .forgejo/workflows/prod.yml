name: Deploy To Prod

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: node

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 18.x
    - run: yarn install --frozen-lockfile
    - run: yarn build
    - run: yarn test

    - name: "Copy files over to location"
      run: cp -r . ${{ secrets.PROD_REPO_PATH }}

  deploy:
    environment: prod
    needs: build
    runs-on: node
    steps:
    - uses: https://github.com/appleboy/ssh-action@v1.0.0
      env:
        EXPRESS_PORT: ${{ vars.PROD_EXPRESS_PORT }}
        EXPRESS_SECRET: ${{ secrets.PROD_EXPRESS_SECRET }}
        EMAIL_HOST: ${{ secrets.PROD_EMAIL_HOST }}
        EMAIL_PORT: ${{ secrets.PROD_EMAIL_PORT }}
        EMAIL_SECURE: ${{ secrets.PROD_EMAIL_SECURE }}
        EMAIL_FROM_NAME: ${{ secrets.PROD_EMAIL_FROM_NAME }}
        EMAIL_FROM_ADDRESS: ${{ secrets.PROD_EMAIL_FROM_ADDRESS }}
        EMAIL_AUTH_ENABLE: ${{ secrets.PROD_EMAIL_AUTH_ENABLE }}
        EMAIL_AUTH_USER: ${{ secrets.PROD_EMAIL_AUTH_USER }}
        EMAIL_AUTH_PASS: ${{ secrets.PROD_EMAIL_AUTH_PASS }}
        EMAIL_TLS_REJECT_UNAUTHORISED: ${{ secrets.PROD_EMAIL_TLS_REJECT_UNAUTHORISED }}
        EMAIL_TEMPLATE_PASSWORDRESET_RESETLINK: ${{ vars.PROD_EMAIL_TEMPLATE_PASSWORDRESET_RESETLINK }}
        EMAIL_TEMPLATE_VERIFYUSER_VERIFYLINK: ${{ vars.PROD_EMAIL_TEMPLATE_PASSWORDRESET_RESETLINK }}
        DB_HOST: ${{ secrets.PROD_DB_HOST }}
        DB_ROOT_HOST: ${{ secrets.PROD_DB_ROOT_HOST }}
        DB_PORT: ${{ secrets.PROD_DB_PORT }}
        DB_NAME: ${{ secrets.PROD_DB_NAME }}
        DB_AUTH_USER: ${{ secrets.PROD_DB_AUTH_USER }}
        DB_AUTH_PASS: ${{ secrets.PROD_DB_AUTH_PASS }}
        DB_SYNC: ${{ secrets.PROD_DB_SYNC }}
        DB_LOGGING: ${{ secrets.PROD_DB_LOGGING }}
      with:
        host: ${{ secrets.PROD_SSH_HOST }}
        username: ${{ secrets.PROD_SSH_USER }}
        key: ${{ secrets.PROD_SSH_KEY }}
        port: ${{ secrets.PROD_SSH_PORT }}
        envs: EXPRESS_PORT,EXPRESS_SECRET,EMAIL_HOST,EMAIL_PORT,EMAIL_SECURE,EMAIL_FROM_NAME,EMAIL_FROM_ADDRESS,EMAIL_AUTH_ENABLE,EMAIL_AUTH_USER,EMAIL_AUTH_PASS,EMAIL_TLS_REJECT_UNAUTHORISED,EMAIL_TEMPLATE_PASSWORDRESET_RESETLINK,EMAIL_TEMPLATE_VERIFYUSER_VERIFYLINK,DB_HOST,DB_ROOT_HOST,DB_PORT,DB_NAME,DB_AUTH_USER,DB_AUTH_PASS,DB_SYNC,DB_LOGGING
        script: |
          source .sshrc \
          && cd ${{ secrets.PROD_REPO_PATH }} \
          && docker compose down \
          && (pm2 stop droplet_prod || true) \
          && (pm2 delete droplet_prod || true) \
          && docker compose up -d \
          && sleep 10 \
          && npm run db:up \
          && pm2 start --name droplet_prod dist/index.js